/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2014-10-02 07:33:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Enumeration;

public final class implicitobjects_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n");
      out.write("\"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html;\r\n");
      out.write("charset=UTF-8\">\r\n");
      out.write("    <title>Implicit Objects Demo</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<p>This page uses JSP Implicit objects to attach objects to the\r\n");
      out.write("    request, session, and application scopes.<br/>\r\n");
      out.write("    It also retrieves some initialization parameters sent in the\r\n");
      out.write("    web.xml configuration file.<br/>\r\n");
      out.write("    The third thing it does is get the buffer size from the\r\n");
      out.write("    implicit response object.<br/>\r\n");
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("<p>\r\n");
      out.write("    ");

        application.setAttribute("applicationAttribute", new String(
                "This string is accessible across sessions."));
        session.setAttribute("sessionAttribute", new String(
                "This string is accessible across requests"));
        request.setAttribute("requestAttribute", new String(
                "This string is accessible in a single request"));
        Enumeration initParameterNames =
                config.getInitParameterNames();
        out.print("Initialization parameters obtained ");
        out.print("from the implicit <br/>");
        out.println("config object:<br/><br/>");
        while (initParameterNames.hasMoreElements()) {
            String parameterName =
                    (String) initParameterNames.nextElement();
            out.print(parameterName + " = ");
            out.print(config.getInitParameter((String) parameterName));
            out.print("<br/>");
        }
        out.println("<br/>");
        out.println("Implicit object <b>page</b> is of type "
                + page.getClass().getName() + "<br/><br/>");
        out.println("Buffer size is: " + response.getBufferSize()
                + " bytes");
    
      out.write("\r\n");
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("<p>\r\n");
      out.write("    <a href=\"implicitobjects2.jsp\">\r\n");
      out.write("        Click here to continue.\r\n");
      out.write("    </a>\r\n");
      out.write("</p>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
